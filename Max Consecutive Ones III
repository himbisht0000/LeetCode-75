class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        // consider 1's as land and 0's as lake and k as number of ladders
        int i = 0,j = 0;
        int ans = 0;
        while(j < nums.size())
        {
            if(nums[j] == 0)
            {
                k--;
            }
            if( k == 0)
            {
                ans = max(ans,j - i + 1);
            }

            if( k < 0)
            {
                if(nums[i] == 0)
                {
                    k++;
                }
                i++;
            }

            j++;
        }

        // conner case when we still have k left but all the zeroes are alredy one
        // in that case j will be one more than the last index hence we should no add zero to it
        if(k > 0)
        {
          ans = max(ans,j - i );
        }
        return ans;
    }
};
